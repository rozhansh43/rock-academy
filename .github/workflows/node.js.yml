name: CI/CD

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long
            type=raw,value=latest

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          build-args: |
            NEXT_PUBLIC_BACKEND_BASE_URL=${{ secrets.NEXT_PUBLIC_BACKEND_BASE_URL }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Prepare deploy dir
        run: |
          mkdir -p ~/rock-front/deploy
          cp docker-compose.front.prod.yaml ~/rock-front/
          if [ -f deploy/nginx.front.conf ]; then cp deploy/nginx.front.conf ~/rock-front/deploy/nginx.front.conf; fi

      - name: GHCR login (optional, only if secrets exist)
        env:
          GHCR_PAT: ${{ secrets.GHCR_PAT }}
          GHCR_USER: ${{ secrets.GHCR_USER }}
        run: |
          if [ -n "$GHCR_PAT" ] && [ -n "$GHCR_USER" ]; then
            echo "$GHCR_PAT" | docker login ghcr.io -u "$GHCR_USER" --password-stdin
            echo "Logged in to GHCR."
          else
            echo "Skipping GHCR login (no GHCR_PAT/GHCR_USER provided)."
          fi

      - name: Deploy
        env:
          FRONT_IMAGE: ghcr.io/${{ github.repository }}:latest
        run: |
          cd ~/rock-front
          export NEXT_PUBLIC_BACKEND_BASE_URL=${{ secrets.NEXT_PUBLIC_BACKEND_BASE_URL }}
          docker compose -f docker-compose.front.prod.yaml pull
          docker compose -f docker-compose.front.prod.yaml up -d
          docker system prune -f
